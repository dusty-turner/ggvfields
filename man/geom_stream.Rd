% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_stream.R
\name{geom_stream}
\alias{geom_stream}
\alias{stat_stream}
\title{Create a Stream Plot Layer}
\usage{
geom_stream(
  mapping = NULL,
  data = NULL,
  stat = "stream",
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  arrow = grid::arrow(angle = 25, length = unit(0.025, "npc"), type = "closed")
)

stat_stream(
  mapping = NULL,
  data = NULL,
  geom = GeomStream,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  arrow = grid::arrow(angle = 25, length = unit(0.025, "npc"), type = "closed")
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}}. If specified and
\code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply \code{mapping} if there is no plot
mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this layer.
When using a \verb{geom_*()} function to construct a layer, the \code{stat}
argument can be used the override the default coupling between geoms and
stats. The \code{stat} argument accepts the following:
\itemize{
\item A \code{Stat} ggproto subclass, for example \code{StatCount}.
\item A string naming the stat. To give the stat as a string, strip the
function name of the \code{stat_} prefix. For example, to use \code{stat_count()},
give the stat as \code{"count"}.
\item For more information and other ways to specify the stat, see the
\link[ggplot2:layer_stats]{layer stat} documentation.
}}

\item{position}{A position adjustment to use on the data for this layer. This
can be used in various ways, including to prevent overplotting and
improving the display. The \code{position} argument accepts the following:
\itemize{
\item The result of calling a position function, such as \code{position_jitter()}.
This method allows for passing extra arguments to the position.
\item A string naming the position adjustment. To give the position as a
string, strip the function name of the \code{position_} prefix. For example,
to use \code{position_jitter()}, give the position as \code{"jitter"}.
\item For more information and other ways to specify the position, see the
\link[ggplot2:layer_positions]{layer position} documentation.
}}

\item{...}{Additional aesthetic mappings or parameters. Use \code{id} to specify grouping for multiple streams.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{arrow}{An optional arrow specification created with \href{https://www.rdocumentation.org/packages/grid/versions/3.6.2/topics/arrow}{\code{grid::arrow()}}.
This adds arrowheads to the end of the paths, enhancing the visual indication of direction.
Setting \code{arrow = NULL} removes arrowheads. Default is \code{grid::arrow(angle = 25, length = unit(0.025, "npc"), type = "closed")}.}
}
\value{
A \code{ggplot2} layer that can be added to a ggplot object to produce a stream plot.
}
\description{
\code{geom_stream()} adds a layer to a ggplot that connects data points in the order specified by a temporal variable \code{t}.
It is ideal for visualizing trajectories, movement patterns, or any sequential data where the order of points is crucial.
Additionally, an optional \code{id} aesthetic allows for the plotting of multiple distinct streams within the same plot.
}
\details{
This geom leverages \href{https://ggplot2.tidyverse.org/reference/geom_path.html}{\code{geom_path()}} internally to draw the paths,
ensuring compatibility with ggplot2's extensive theming and customization options. By specifying the \code{t} aesthetic,
users can control the sequencing of points to accurately represent the flow of the stream.
}
\section{Aesthetics}{

\describe{
\item{x}{The x-coordinate of the points.}
\item{y}{The y-coordinate of the points.}
\item{t}{A numeric or date/time variable that determines the order of points.}
\item{id}{(Optional) A categorical variable that groups points into separate streams. Each unique \code{id} represents a distinct stream.}
\item{colour, color, size, linetype, alpha}{Additional aesthetics inherited from \href{https://ggplot2.tidyverse.org/reference/geom_path.html}{\code{geom_path()}}.}
}
}

\section{Key Notes}{

\itemize{
\item \strong{Ordering by Time (\code{t}):} The \code{t} aesthetic is essential for determining the sequence in which points are connected. Ensure that \code{t} accurately represents the temporal or sequential order of your data.
\item \strong{Grouping with \code{id}:} When plotting multiple streams, the \code{id} aesthetic groups points into separate paths. Each unique \code{id} will result in an independent stream within the same plot.
\item \strong{Arrowheads for Directionality:} Utilizing the \code{arrow} parameter can help indicate the direction of the stream, which is particularly useful for representing flows or movements.
\item \strong{Compatibility:} Since \code{geom_stream()} is built upon \code{geom_path()}, all customization options available to \code{geom_path()} are also applicable to \code{geom_stream()}.
}
}

\examples{
\dontrun{}

}
