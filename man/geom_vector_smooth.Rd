% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_vector_smooth.R
\docType{data}
\name{geom_vector_smooth}
\alias{geom_vector_smooth}
\alias{stat_vector_smooth}
\alias{StatVectorSmooth}
\alias{GeomVectorSmooth}
\title{Create a Smooth Vector Plot Layer}
\format{
An object of class \code{StatVectorSmooth} (inherits from \code{Stat}, \code{ggproto}, \code{gg}) of length 5.

An object of class \code{GeomVectorSmooth} (inherits from \code{GeomSegment}, \code{Geom}, \code{ggproto}, \code{gg}) of length 6.
}
\usage{
geom_vector_smooth(
  mapping = NULL,
  data = NULL,
  stat = "vector_smooth",
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  n = c(11, 11),
  method = "lm",
  se = TRUE,
  se.circle = TRUE,
  pi_type = "ellipse",
  conf_level = c(0.95, NA),
  formula = cbind(fx, fy) ~ x * y,
  eval_points = NULL,
  arrow = grid::arrow(angle = 20, length = unit(0.015, "npc"), type = "closed")
)

stat_vector_smooth(
  mapping = NULL,
  data = NULL,
  geom = "vector_smooth",
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  n = c(11, 11),
  method = "lm",
  se = TRUE,
  se.circle = TRUE,
  conf_level = c(0.95, NA),
  pi_type = "ellipse",
  formula = cbind(fx, fy) ~ x * y,
  eval_points = NULL,
  arrow = grid::arrow(angle = 20, length = unit(0.015, "npc"), type = "closed")
)

StatVectorSmooth

GeomVectorSmooth
}
\arguments{
\item{mapping}{A set of aesthetic mappings created by \code{\link[ggplot2:aes]{ggplot2::aes()}}.
\strong{Required:} \code{x} and \code{y} must always be provided. In addition, either
\code{xend} and \code{yend} or \code{angle} and \code{distance} must be supplied.}

\item{data}{A data frame containing the vector data in wide format.}

\item{stat}{The statistical transformation to use on the data for this layer.
Defaults to \link{StatVector}.}

\item{position}{Position adjustment, either as a string or the result of a
call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{na.rm}{Logical. If \code{FALSE} (the default), missing values are removed
with a warning.}

\item{show.legend}{Logical. Should this layer be included in the legends?}

\item{inherit.aes}{Logical. If \code{FALSE}, overrides the default aesthetics
rather than combining with them.}

\item{n}{An integer vector specifying the number of grid points along each
axis for smoothing.}

\item{method}{Character; specifies the smoothing method to use. The only
supported method is \code{"lm"}, which fits a multivariate linear model to predict
the vector displacements \code{fx} and \code{fy} based on the coordinates \code{x} and \code{y}.}

\item{se}{Logical; if \code{TRUE}, confidence intervals are plotted around the
smoothed vectors.}

\item{se.circle}{Logical; if \code{TRUE}, circles are drawn around the origin of
the vectors to represent the radius of the confidence interval. This feature
is useful when \code{se = TRUE}.}

\item{pi_type}{Character; determines how prediction intervals are displayed
around the smoothed vectors. Two options are available:
\itemize{
\item \code{"wedge"}: Displays angular wedges that indicate uncertainty in both the
direction and magnitude of the vectors. Wedges show the range of possible
vector orientations and lengths.
\item \code{"ellipse"}: Uses ellipses to depict prediction intervals, reflecting
the covariance between the vector components (\code{fx} and \code{fy}). Ellipses
provide a visual representation of joint uncertainty in vector directions.
The default is \code{"wedge"}. If \code{pi_type} is set to \code{"ellipse"} and \code{eval_points}
is \code{NULL}, the function switches \code{pi_type} to \code{"wedge"} to ensure proper
interval representation.
}}

\item{conf_level}{Numeric vector; specifies the confidence levels for the
prediction intervals when \code{se = TRUE}. \strong{Default is \code{conf_level = 0.95}}.}

\item{formula}{A formula specifying the multivariate linear model used
for smoothing. The default formula is \code{cbind(fx, fy) ~ x * y}.}

\item{eval_points}{Data frame of evaluation points, or \code{NULL}. When provided,
it specifies the grid points where the smoothing model is evaluated. If
\code{NULL}, the function generates a grid based on \code{n}.}

\item{arrow}{Arrow specification created by \code{grid::arrow()}. This parameter
controls the appearance of arrowheads at the ends of vectors, including
angle, length, and type.}

\item{geom}{The geometric object used to draw the streamline. Defaults to
\link[ggplot2:ggplot2-ggproto]{ggplot2::GeomPath} in \code{geom_stream()}, or \link{GeomStream} in \code{stat_stream()}.}
}
\value{
A \code{ggplot2} layer that can be added to a ggplot object to create a
smooth vector field plot.
}
\description{
\code{geom_vector_smooth} generates a ggplot layer that visualizes a smooth vector
field. It uses raw vector data and applies smoothing techniques to estimate
the underlying vector field. This functionality is similar to \code{geom_smooth()}
in ggplot2, but is designed specifically for vector data rather than scalar data.
}
\details{
\strong{Multivariate Linear Model}:

The \code{"lm"} method fits a multivariate linear model to predict vector displacements
\code{fx} and \code{fy} based on the input coordinates \code{x} and \code{y}. This model includes
interaction terms (\code{x * y}) to capture more complex relationships in the vector field.

\strong{Prediction Intervals}:

Two types of prediction intervals are supported:
\itemize{
\item \strong{Ellipse}: Ellipses are used to represent the covariance of predicted \code{fx}
and \code{fy} values. The size and orientation of the ellipses illustrate both
the uncertainty in vector magnitude and the correlation between vector components.
\item \strong{Wedge}: Wedges are angular sectors that indicate the range of possible
directions and lengths for the vectors. This type of prediction interval
provides an intuitive visualization of uncertainty in vector orientation.
}

The intervals are computed using the confidence level specified by the \code{conf_level}
parameter.
}
\section{Aesthetics}{

\code{geom_vector_smooth} supports the following aesthetics (required aesthetics are in bold):
\itemize{
\item \strong{\code{x}}: The x-coordinate of the vector's starting point.
\item \strong{\code{y}}: The y-coordinate of the vector's starting point.
\item \strong{\code{fx}}: The vector's displacement along the x-axis.
\item \strong{\code{fy}}: The vector's displacement along the y-axis.
\item \code{color}: The color of the vector line.
\item \code{linewidth}: The thickness of the vector line.
\item \code{linetype}: The type of the vector line (e.g., solid or dashed).
\item \code{alpha}: The transparency level of the vector.
\item \code{arrow}: Specifies arrowheads for the vectors.
}
}

\examples{
# Function to generate vectors
generate_vectors <- function(v) {
  x <- v[1]
  y <- v[2]
  c(
    sin(x) + sin(y) + rnorm(1, 5, 1),
    sin(x) - sin(y) - rnorm(1, 5, 1)
  )
}

# Set seed for reproducibility
set.seed(123)

# Create sample points and compute vectors
sample_points <- data.frame(
  x = runif(30, 0, 10),
  y = runif(30, 0, 10)
)

result <- t(apply(sample_points, 1, generate_vectors))

sample_points$xend <- result[, 1]
sample_points$yend <- result[, 2]
sample_points$fx <- sample_points$xend - sample_points$x
sample_points$fy <- sample_points$yend - sample_points$y
sample_points$distance <- sqrt(sample_points$fx^2 + sample_points$fy^2)
sample_points$angle <- atan2(sample_points$fy, sample_points$fx)

# Define evaluation points
eval_points <- data.frame(
  x = c(0, 7.5),
  y = c(10, 5)
)

# Example 1:
ggplot(sample_points, aes(x = x, y = y)) +
  geom_vector(aes(fx = fx, fy = fy, color = NULL), center = FALSE, alpha = 0.2) +
  geom_vector_smooth(aes(fx = fx, fy = fy), n = 5) +
  ggtitle("Smoothed Vector Field")

# Example 2: Ellipse with eval_points
ggplot(sample_points, aes(x = x, y = y)) +
  geom_vector(aes(fx = fx, fy = fy, color = NULL), center = FALSE, alpha = 0.2) +
  geom_vector_smooth(aes(fx = fx, fy = fy), eval_points = eval_points, conf_level = c(0.9)) +
  ggtitle("Smoothed Vector Field with Ellipse Intervals")

# Example 3: Wedge with eval_points
ggplot(sample_points, aes(x = x, y = y)) +
  geom_vector(aes(fx = fx, fy = fy, color = NULL), center = FALSE, alpha = 0.2) +
  geom_vector_smooth(aes(fx = fx, fy = fy), eval_points = eval_points, pi_type = "ellipse") +
  ggtitle("Smoothed Vector Field with Wedge Intervals")

}
\keyword{datasets}
