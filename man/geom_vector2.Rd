% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_vector2.R
\name{geom_vector2}
\alias{geom_vector2}
\alias{stat_vector2}
\title{Create a Vector Plot Layer with Norm Mapped to Length}
\usage{
geom_vector2(
  mapping = NULL,
  data = NULL,
  stat = StatVector,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  center = FALSE,
  tail_point = FALSE,
  eval_point = TRUE,
  arrow = NULL
)

stat_vector2(
  mapping = NULL,
  data = NULL,
  geom = GeomVector,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  center = FALSE,
  tail_point = FALSE,
  eval_point = TRUE,
  arrow = NULL
)
}
\arguments{
\item{mapping}{Aesthetic mappings created by \code{aes()} or \code{aes_()}.
These functions ensure that \code{length = after_stat(norm)} is mapped by default,
and \code{color} is set to \code{NULL} unless otherwise specified.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this layer.
When using a \verb{geom_*()} function to construct a layer, the \code{stat}
argument can be used the override the default coupling between geoms and
stats. The \code{stat} argument accepts the following:
\itemize{
\item A \code{Stat} ggproto subclass, for example \code{StatCount}.
\item A string naming the stat. To give the stat as a string, strip the
function name of the \code{stat_} prefix. For example, to use \code{stat_count()},
give the stat as \code{"count"}.
\item For more information and other ways to specify the stat, see the
\link[ggplot2:layer_stats]{layer stat} documentation.
}}

\item{position}{A position adjustment to use on the data for this layer. This
can be used in various ways, including to prevent overplotting and
improving the display. The \code{position} argument accepts the following:
\itemize{
\item The result of calling a position function, such as \code{position_jitter()}.
This method allows for passing extra arguments to the position.
\item A string naming the position adjustment. To give the position as a
string, strip the function name of the \code{position_} prefix. For example,
to use \code{position_jitter()}, give the position as \code{"jitter"}.
\item For more information and other ways to specify the position, see the
\link[ggplot2:layer_positions]{layer position} documentation.
}}

\item{...}{Other arguments passed on to \code{geom_vector()} or \code{stat_vector()}.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{center}{Logical; if \code{TRUE}, centers the vector on the specified (\code{x}, \code{y}) location.
Default is \code{FALSE}, meaning the vector starts at the specified (\code{x}, \code{y}) point.}

\item{tail_point}{Logical; if \code{TRUE}, adds a point to mark the tail of each vector.
Default is \code{TRUE} in \code{geom_vector2}, providing a small marker at the tail.}

\item{eval_point}{Logical; if \code{TRUE}, adds a point at the evaluation end (or midpoint if centered)
of each vector to mark the target or midpoint position more clearly.}

\item{arrow}{Arrow specification for vector arrowheads, created with \code{grid::arrow()}.
Controls the appearance of arrowheads, including angle, length, and type. Default is \code{NULL}.}

\item{geom}{The geometric object to use to display the data for this layer.
When using a \verb{stat_*()} function to construct a layer, the \code{geom} argument
can be used to override the default coupling between stats and geoms. The
\code{geom} argument accepts the following:
\itemize{
\item A \code{Geom} ggproto subclass, for example \code{GeomPoint}.
\item A string naming the geom. To give the geom as a string, strip the
function name of the \code{geom_} prefix. For example, to use \code{geom_point()},
give the geom as \code{"point"}.
\item For more information and other ways to specify the geom, see the
\link[ggplot2:layer_geoms]{layer geom} documentation.
}}
}
\value{
A ggplot2 layer that can be added to a ggplot object.
}
\description{
\code{geom_vector2} and \code{stat_vector2} are extensions of \code{geom_vector} and \code{stat_vector}.
These functions provide identical functionality but change the default behavior
to map the \strong{vector norm (magnitude)} to the \code{length} aesthetic instead of color.
}
\details{
This is useful when you want the vector's magnitude to be visually emphasized by
its length rather than its color. These functions also disable the default
color mapping, setting all vectors to black unless otherwise specified.

By default, \code{geom_vector2} and \code{stat_vector2} have \code{length = after_stat(norm)} mapped,
\code{color} set to \code{NULL}, and \code{tail_point} set to \code{TRUE}, which adds a small marker at
the tail of each vector. Additionally, \code{center} is set to \code{FALSE}, meaning that vectors
start from the specified (\code{x}, \code{y}) coordinates rather than centering on them.
The \code{arrow} parameter is set to \code{NULL} by default, allowing users to specify custom
arrow types if desired.
}
\examples{
set.seed(1234)
n <- 10
wind_data <- data.frame(
  lon = rnorm(n),
  lat = rnorm(n),
  wind_dir = runif(n, -pi, pi),
  wind_spd = rchisq(n, df = 2),
  dx = rchisq(n, df = 2) * cos(runif(n, -pi, pi)),
  dy = rchisq(n, df = 2) * sin(runif(n, -pi, pi))
)

ggplot(wind_data) +
  geom_vector2(aes(x = lon, y = lat, dx = dx, dy = dy))

# Example with Polar Coordinates
ggplot(wind_data) +
  geom_vector2(aes(x = lon, y = lat, angle = wind_dir, distance = wind_spd))

}
\seealso{
Use \code{\link[=geom_vector]{geom_vector()}} if you prefer to map vector magnitude to color rather than length.
}
