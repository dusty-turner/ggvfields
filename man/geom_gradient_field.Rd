% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_gradient_field.R
\name{geom_gradient_field}
\alias{geom_gradient_field}
\alias{stat_gradient_field}
\title{Geom Gradient Field}
\usage{
geom_gradient_field(
  mapping = NULL,
  data = NULL,
  stat = StatStreamField,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = TRUE,
  inherit.aes = TRUE,
  fun,
  xlim = c(-1, 1),
  ylim = c(-1, 1),
  n = 11,
  center = TRUE,
  normalize = TRUE,
  arrow = grid::arrow(angle = 30, length = grid::unit(0.02, "npc"), type = "closed")
)

stat_gradient_field(
  mapping = NULL,
  data = NULL,
  geom = GeomStream,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = TRUE,
  inherit.aes = TRUE,
  fun,
  xlim = c(-1, 1),
  ylim = c(-1, 1),
  n = 11,
  center = TRUE,
  normalize = TRUE,
  arrow = grid::arrow(angle = 30, length = grid::unit(0.02, "npc"), type = "closed")
)
}
\arguments{
\item{mapping}{Aesthetic mappings created by \code{\link[ggplot2:aes]{ggplot2::aes()}}. You can map aesthetics like
\code{color}, \code{size}, \code{linetype}, etc., to variables computed by the stat.}

\item{data}{A data frame or other object, as in \code{\link[ggplot2:layer]{ggplot2::layer()}}. If \code{NULL}, the layer
uses the plot's data.}

\item{stat}{The statistical transformation to use on the data for this layer. Default is \code{\link{StatStreamField}}.}

\item{position}{Position adjustment, either as a string, or the result of a call to a
position adjustment function. Defaults to \code{"identity"}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{ggplot2::layer()}} and the underlying
StatGradientField and \link{GeomStream}. These are often used to set aesthetics like \code{color = "blue"}
or \code{size = 1.0}.}

\item{na.rm}{Logical. If \code{FALSE} (default), removes missing values with a warning.
If \code{TRUE}, silently removes missing values.}

\item{show.legend}{Logical. Should this layer be included in the legends? \code{NA}, the default,
includes it if any aesthetics are mapped. \code{FALSE} never includes it, and \code{TRUE} always includes
it.}

\item{inherit.aes}{Logical. If \code{FALSE}, overrides the default aesthetics, rather than
combining with them. This is most useful for helper functions that define both data and
aesthetics, and should not inherit behavior from the main ggplot call.}

\item{fun}{A scalar function that defines the field. It should take a numeric vector of
length 2 (representing \eqn{(x, y)} coordinates) and return a single numeric value representing
the scalar field at that point. \strong{(Required)}}

\item{xlim}{Numeric vector of length two. Specifies the limits of the x-axis domain.
Defaults to \code{c(-1, 1)}.}

\item{ylim}{Numeric vector of length two. Specifies the limits of the y-axis domain.
Defaults to \code{c(-1, 1)}.}

\item{n}{Integer. Grid resolution specifying the number of seed points along each axis.
Higher values produce a denser vector field. Defaults to \code{11}.}

\item{center}{Logical. If \code{TRUE}, centers the seed points around the midpoint of the domain.
Useful for symmetric flows. Defaults to \code{TRUE}.}

\item{normalize}{Logical; if \code{TRUE}, normalizes each vector to a unit length before
applying any scaling. This can help prevent overplotting in dense plots and
ensures consistent visual representation.}

\item{arrow}{A \code{\link[grid:arrow]{grid::arrow()}} specification to add arrowheads to the vectors, indicating
direction. Defaults to a closed arrow with a 30-degree angle and length \code{0.02} npc.}

\item{geom}{The geometric object to use to display the data. Defaults to \link{GeomStream}.}
}
\value{
A ggplot2 \strong{Layer} object that can be added to a plot. It computes the gradient
vectors based on the specified scalar field function and visualizes them.
}
\description{
\code{geom_gradient_field()} creates a ggplot2 layer that visualizes the gradient of a scalar field
by generating a vector field. It internally computes the gradient using numerical differentiation
and leverages StatGradientField to process the data, which is then rendered using a specified geom
(defaulting to \link{GeomStream}).
}
\details{
\itemize{
\item \strong{Scalar Field Function (\code{fun})}: The function should encapsulate the behavior of the scalar field.
For example, a paraboloid field can be defined as \code{function(v) { v[1]^2 + v[2]^2 }}.
\item \strong{Gradient Calculation}:
The gradient is computed numerically using the \code{numDeriv::grad} function, which approximates
the gradient vector \eqn{(\partial f / \partial x, \partial f / \partial y)} at each point.
\item \strong{Aesthetic Mappings}: Vector aesthetics like \code{color}, \code{size}, and \code{linetype} can be customized
via the \code{mapping} parameter or by setting them directly in the \code{geom_gradient_field} call.
}
}
\section{Aesthetics}{

\code{geom_gradient_field()} understands the following aesthetics (optional):
\itemize{
\item \code{color}: Color of the gradient vectors.
\item \code{size}: Thickness of the gradient vectors.
\item \code{linetype}: Line type of the gradient vectors.
\item \code{alpha}: Transparency level of the gradient vectors.
}
}

\examples{

paraboloid_field <- function(v) {
  x <- v[1]
  y <- v[2]
  x^2 + y^2
}

# Create the gradient field plot
ggplot() +
  geom_gradient_field(fun = paraboloid_field)

}
