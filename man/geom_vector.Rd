% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_vector.R
\docType{data}
\name{geom_vector}
\alias{geom_vector}
\alias{geom_vector2}
\alias{stat_vector}
\alias{StatVector}
\alias{stat_vector2}
\title{Vector Layers for ggplot2}
\format{
An object of class \code{StatVector} (inherits from \code{Stat}, \code{ggproto}, \code{gg}) of length 4.
}
\usage{
stat_vector(
  mapping = NULL,
  data = NULL,
  geom = GeomStream,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  center = TRUE,
  normalize = TRUE,
  tail_point = FALSE,
  eval_point = FALSE,
  L = NULL,
  arrow = grid::arrow(angle = 25, length = unit(0.025, "npc"), type = "closed")
)

StatVector

geom_vector2(
  mapping = NULL,
  data = NULL,
  stat = StatVector,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  center = FALSE,
  normalize = FALSE,
  tail_point = TRUE,
  eval_point = FALSE,
  arrow = NULL
)

stat_vector2(
  mapping = NULL,
  data = NULL,
  geom = GeomStream,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  center = FALSE,
  normalize = FALSE,
  tail_point = TRUE,
  eval_point = FALSE,
  L = NULL,
  arrow = NULL
)
}
\arguments{
\item{mapping}{A set of aesthetic mappings created by \code{\link[ggplot2:aes]{ggplot2::aes()}}.
\strong{Required:} \code{x} and \code{y} must always be provided. In addition, either
\code{xend} and \code{yend} or \code{angle} and \code{distance} must be supplied.}

\item{data}{A data frame containing the vector data in wide format.}

\item{geom}{The geometric object used to draw the streamline. Defaults to
\link[ggplot2:ggplot2-ggproto]{ggplot2::GeomPath} in \code{geom_stream()}, or \link{GeomStream} in \code{stat_stream()}.}

\item{position}{Position adjustment, either as a string or the result of a
call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{na.rm}{Logical. If \code{FALSE} (the default), missing values are removed
with a warning.}

\item{show.legend}{Logical. Should this layer be included in the legends?}

\item{inherit.aes}{Logical. If \code{FALSE}, overrides the default aesthetics
rather than combining with them.}

\item{center}{Logical. If \code{TRUE}, the vector is recentered so that the
original (x, y) becomes the midpoint of the vector. Default is \code{FALSE}.}

\item{normalize}{Logical. If \code{TRUE}, the vector endpoints are adjusted so
that each vector has unit length.}

\item{tail_point}{Logical. If \code{TRUE}, a point is drawn at the tail (i.e., the
starting point) of each vector. This can help to indicate the origin of the
vector. Default is \code{FALSE}.}

\item{eval_point}{Logical. If \code{TRUE}, a point is drawn at the evaluation
point, corresponding to the original (untransformed) seed point before any
centering or normalization is applied. This allows for comparison between
the original and transformed positions. Default is \code{FALSE}.}

\item{L}{Numeric scalar. The desired length for the vectors (in data units).
If \code{NULL} (the default), a default value is computed automatically based on
the plotâ€™s x and y limits.}

\item{arrow}{An optional \code{\link[grid:arrow]{grid::arrow()}} specification to add arrowheads to
the vectors (default: \code{grid::arrow(angle = 25, length = unit(0.025, "npc"), type = "closed")}).}

\item{stat}{The statistical transformation to use on the data for this layer.
Defaults to \link{StatVector}.}
}
\value{
A ggplot2 layer that can be added to a plot.
}
\description{
These functions provide convenient ggplot2 layers for drawing vectors.
}
\details{
They accept wide-format data with the aesthetics \code{x} and \code{y} plus either
(\code{xend}, \code{yend}) or (\code{angle}, \code{distance}). If the latter is supplied, the
endpoints are computed as a translation of the starting point using polar
coordinates (assuming the angle is in degrees). The data is then converted
into long format (two rows per vector) using \link{StatVector} and plotted using
\link{GeomStream}. Directional arrowheads can be added to indicate the vector
direction.

Two variants are available:
\itemize{
\item \strong{geom_vector()} creates the layer with the user-supplied aesthetic
mapping.
\item \strong{geom_vector2()} uses the same underlying stat (\link{StatVector}) but adds a
default mapping for \code{length = after_stat(norm)} so that the computed vector
norm is available as an aesthetic.
}
}
\examples{
# Basic usage with explicit start and end points:
vectors1 <- data.frame(
  x    = c(0, 1, 2),
  y    = c(0, 1, 2),
  xend = c(3, 1, 5),
  yend = c(0, 5, 6)
)
ggplot(vectors1, aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_vector()

# Basic usage with angle and distance:
vectors2 <- data.frame(
  x        = c(0, 1, 2),
  y        = c(0, 1, 2),
  angle    = c(0, pi/2, pi/4),
  distance = c(3, 4, 5)
)
ggplot(vectors2) +
  geom_vector(aes(x = x, y = y, angle = angle, distance = distance))

# Using center = TRUE to adjust vectors so that they originate from their midpoints:
ggplot(vectors1, aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_vector(center = TRUE)

# Using normalize = TRUE to adjust vectors to have unit length:
ggplot(vectors2, aes(x = x, y = y, angle = angle, distance = distance)) +
  geom_vector(normalize = TRUE)

# Using geom_vector2, which adds a default mapping for length:
ggplot(vectors1, aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_vector2()

}
\keyword{datasets}
